#Strings in Python
A string is a sequence of characters. 
Strings in Python are enclosed in either single (') or double quotes ("), and they are immutable,
 meaning once created, their values cannot be changed.

 Strings are immutable: Once a string is created, it cannot be changed. Any operation on a string that seems to modify it will actually create a new string.
String Concatenation: You can combine (concatenate) strings using the + operator:
String Repetition: You can repeat a string multiple times using the * operator:
Accessing Characters: Strings are indexed, so you can access individual characters using their index (starting from 0):
Slicing: You can extract a part of the string using slicing:
Escape Characters: If you need to include special characters like quotes or newlines in a string, you can use escape sequences:

\' for single quote
\" for double quote
\n for newline
\t for tab

String Methods: Python provides many built-in methods for strings, such as:

len(): Returns the length of a string.
.lower(): Converts the string to lowercase.
.upper(): Converts the string to uppercase.
.strip(): Removes leading and trailing spaces.
.replace(): Replaces a part of the string with another string.
Example:

Multiline Strings: You can create multiline strings by using triple quotes (''' or """):
String Formatting: You can insert variables into strings using f-strings (Python 3.6+):








So any sequence of characters within single quotes are within double quotes is considered as a string.
So any sequence of characters within single quotes are within double quotes is considered as a string.but not multi line string literals.

In python  only positive index as well as negative index  use both . another language only positive index.
positive index start form left to right(start from 0) and negative index start from in right  to left (start from -1).